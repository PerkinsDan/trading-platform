"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2085],{5649:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Apps/MarketData/MarketDataService","title":"Market Data Service","description":"Filename: MarketDataService.java","source":"@site/docs/Apps/MarketData/MarketDataService.md","sourceDirName":"Apps/MarketData","slug":"/Apps/MarketData/MarketDataService","permalink":"/docs/Apps/MarketData/MarketDataService","draft":false,"unlisted":false,"editUrl":"https://github.com/PerkinsDan/trading-platform/tree/main/documentation/docs/docs/Apps/MarketData/MarketDataService.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Market Data Router","permalink":"/docs/Apps/MarketData/MarketDataRouter"},"next":{"title":"Market Data Service Main","permalink":"/docs/Apps/MarketData/MarketDataServiceMain"}}');var r=a(4848),s=a(8453);const i={},c="Market Data Service",d={},l=[{value:"What does it do?",id:"what-does-it-do",level:2},{value:"When do we use it?",id:"when-do-we-use-it",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>MarketDataService()</code>",id:"marketdataservice",level:3},{value:"<code>getDataGenerationThread()</code>",id:"getdatagenerationthread",level:3},{value:"<code>getInstance()</code>",id:"getinstance",level:3},{value:"<code>getTimeSeries(Ticker)</code>",id:"gettimeseriesticker",level:3},{value:"<code>getLatestSnapshot(Ticker)</code>",id:"getlatestsnapshotticker",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"market-data-service",children:"Market Data Service"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Filename"}),": ",(0,r.jsx)(t.code,{children:"MarketDataService.java"})]}),"\n",(0,r.jsx)(t.h2,{id:"what-does-it-do",children:"What does it do?"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"MarketDataService"})," is the top-level class of the MarketData microservice and acts as the interface to the MarketData API."]}),"\n",(0,r.jsxs)(t.li,{children:["On instantiation:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"If the app is starting up, it generates a day's worth of data."}),"\n",(0,r.jsxs)(t.li,{children:["Otherwise, it checks every hour if the time is 30 minutes either side of ",(0,r.jsx)(t.code,{children:"PRE_MARKET_OPEN"})," and generates another day's worth of data if ",(0,r.jsx)(t.code,{children:"True"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["The ",(0,r.jsx)(t.code,{children:"MarketDataService"})," runs with a Daemon thread, as the main thread is reserved for handling API calls."]}),"\n",(0,r.jsx)(t.li,{children:"It is created as a Singleton for thread-safety and global access control, ensuring all market data comes from the same source."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"when-do-we-use-it",children:"When do we use it?"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Anytime we need market data, such as in the front-end ",(0,r.jsx)(t.code,{children:"LiquidityEngine"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"simulateData"})}),": Access point to the ",(0,r.jsx)(t.code,{children:"simulateData"})," class and its ",(0,r.jsx)(t.code,{children:"generateData()"})," method."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"marketDataServiceHolder"})}),": Singleton object for the class."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"marketdataservice",children:(0,r.jsx)(t.code,{children:"MarketDataService()"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Description"}),": Creates the service object and starts the Daemon thread."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"getdatagenerationthread",children:(0,r.jsx)(t.code,{children:"getDataGenerationThread()"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Returns"}),": The daemon thread which generates data daily"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"getinstance",children:(0,r.jsx)(t.code,{children:"getInstance()"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Returns"}),": The single instance of ",(0,r.jsx)(t.code,{children:"MarketDataService"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"gettimeseriesticker",children:(0,r.jsx)(t.code,{children:"getTimeSeries(Ticker)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Returns"}),": The ",(0,r.jsx)(t.code,{children:"TimeSeries"})," associated with a ",(0,r.jsx)(t.code,{children:"Ticker"})," up to the current time."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"getlatestsnapshotticker",children:(0,r.jsx)(t.code,{children:"getLatestSnapshot(Ticker)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Returns"}),": The ",(0,r.jsx)(t.code,{children:"Snapshot"})," associated with the current time."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>c});var n=a(6540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);