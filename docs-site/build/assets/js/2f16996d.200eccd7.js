"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[502],{2419:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"Diagrams/marketData","title":"Market Data","description":"","source":"@site/docs/Diagrams/marketData.md","sourceDirName":"Diagrams","slug":"/Diagrams/marketData","permalink":"/docs/Diagrams/marketData","draft":false,"unlisted":false,"editUrl":"https://github.com/PerkinsDan/trading-platform/tree/main/documentation/docs/docs/Diagrams/marketData.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Business Flows","permalink":"/docs/Diagrams/businessFlows"},"next":{"title":"Order Processor","permalink":"/docs/Diagrams/orderProcessor"}}');var s=t(4848),r=t(8453);const i={},o="Market Data",c={},m=[];function l(e){const a={h1:"h1",header:"header",mermaid:"mermaid",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"market-data",children:"Market Data"})}),"\n",(0,s.jsx)(a.mermaid,{value:"---\ntitle: Microservice - Market Data\n---\nclassDiagram\n    %% Define classes\n    class Tickers {\n        <<enumeration>>\n        + MSFT\n        + AMZN\n        + GOOGL\n        + META\n        + AAPL\n        + TSLA\n    }\n\n    class TimeSeries {\n        - snapshots ArrayList<Snapshot>\n        + addSnapshot() void\n        + getSnapshots() ArrayList<Snapshot>\n        + getLatestSnapshot() Snapshot\n    }\n\n    class Snapshot {\n        <<record>>\n        + price double\n        + timestamp LocalTime\n        + change double\n    }\n\n    class SimulateData {\n        - marketOpenTime LocalTime\n        - marketCloseTime LocalTime\n        - timeSeriesMap Map<Tickers, TimeSeries>\n        + SimulateData() void\n        + getTimeSeries() TimeSeries\n        + generateData() void\n    }\n\n    class MarketDataService {\n        - simulateData SimulateData\n        - MarketDataServiceHolder MarketDataService\n        + MarketDataService()\n        + getInstance() MarketDataService\n        + getTimeSeries() ArrayList<Snapshot>\n        + getLatestSnapshot() Snapshot\n    }\n\n    %% Define Relations\n    TimeSeries ..o Snapshot : Aggregates\n    SimulateData --* TimeSeries : Composed of\n    SimulateData ..> Tickers : Depends on\n    MarketDataService --\x3e SimulateData"})]})}function d(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>i,x:()=>o});var n=t(6540);const s={},r=n.createContext(s);function i(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);