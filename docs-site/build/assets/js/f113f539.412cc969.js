"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3595],{3813:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"Diagrams/orderProcessor","title":"Order Processor","description":"","source":"@site/docs/Diagrams/orderProcessor.md","sourceDirName":"Diagrams","slug":"/Diagrams/orderProcessor","permalink":"/docs/Diagrams/orderProcessor","draft":false,"unlisted":false,"editUrl":"https://github.com/PerkinsDan/trading-platform/tree/main/documentation/docs/docs/Diagrams/orderProcessor.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Market Data","permalink":"/docs/Diagrams/marketData"},"next":{"title":"Order Matching Explained","permalink":"/docs/OrderMatchingExplained"}}');var r=a(4848),s=a(8453);const o={},i="Order Processor",c={},m=[];function d(e){const t={h1:"h1",header:"header",mermaid:"mermaid",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"order-processor",children:"Order Processor"})}),"\n",(0,r.jsx)(t.mermaid,{value:"---\ntitle: Microservice - Market Data\n---\nclassDiagram\n    %% Define classes\n    class Tickers {\n        <<enumeration>>\n        + MSFT\n        + AMZN\n        + GOOGL\n        + META\n        + AAPL\n        + TSLA\n    }\n\n    class TimeSeries {\n        - snapshots ArrayList<Snapshot>\n        + addSnapshot() void\n        + getSnapshots() ArrayList<Snapshot>\n        + getLatestSnapshot() Snapshot\n    }\n\n    class Snapshot {\n        <<record>>\n        + price double\n        + timestamp LocalTime\n        + change double\n    }\n\n    class SimulateData {\n        - marketOpenTime LocalTime\n        - marketCloseTime LocalTime\n        - timeSeriesMap Map<Tickers, TimeSeries>\n        + SimulateData() void\n        + getTimeSeries() TimeSeries\n        + generateData() void\n    }\n\n    class MarketDataService {\n        - simulateData SimulateData\n        - MarketDataServiceHolder MarketDataService\n        + MarketDataService()\n        + getInstance() MarketDataService\n        + getTimeSeries() ArrayList<Snapshot>\n        + getLatestSnapshot() Snapshot\n    }\n\n    %% Define Relations\n    TimeSeries ..o Snapshot : Aggregates\n    SimulateData --* TimeSeries : Composed of\n    SimulateData ..> Tickers : Depends on\n    MarketDataService --\x3e SimulateData"})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var n=a(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);